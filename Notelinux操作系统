linux操作系统:
进程的组成：5个部分text(放置代码文件)、data(放置全局变量和静态变量)、heap堆(run time时分配内存)、stack栈(存放局部变量和函数返回地址) PCB(进程的控制块)
           ----------------------------------- -----------------
           ｜                                ｜                 ｜
           ｜             PCB                ｜                 ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜------------------
           ｜                                ｜                 ｜
           ｜            Stack               ｜                 ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜                 ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜                 ｜
           ｜                                ｜                 ｜  ---------------->统称为进程的上下文
           ｜           heap                 ｜      进程实体    ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜                 ｜
           ｜                                ｜                 ｜
           ｜            data                ｜                 ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜                 ｜
           ｜                                ｜                 ｜
           ｜             text               ｜                 ｜
           ｜                                ｜                 ｜
           ｜--------------------------------｜------------------

并发进程的切换：并发进程中，一个进程在执行过程中可能会被另一个进程替换占据cpu
   需要回答的问题1⃣️什么触发了进程切换
               2⃣️进程切换时要做什么

   中断技术(interrupt) 
     发生某事件--->中止cpu现运行的程序(保存进程的上下文信息)        handler执行完毕返回原程序中断点
                               ⬇️                                         ⬆️
                               ⬇️                                         ⬆️
                               ⬇️                                         ⬆️
                   引出该事件的处理程序执行handler(在操作系统中内核运行) （陷阱机制trap instriction）

          中断事件{Exception异常、Interrupt中断}
          中断源:外中断（interrupt）来自处理器之外的硬件给的中断信号，属于异步中断
                内中断（exception）来自处理器内部，在指令执行过程中发生的中断，属于同步中断包含硬件异常、程序异常、系统中断
   特权指令和非特权指令：
      通过标志位来区分特权指令和非特权指令
      1⃣️Privileged Instructions:运行在内核模式下的指令包括：io指令、中断指令、关闭所有interrupts、设置定时器、进程转换
      2⃣️Non-Privileged Instructions:运行在用户模式下的指令

   模式切换：         中断
            用户态 ----------> 核心态   中断是用户态切换到内核的唯一途径
                  <----------
                     Load PSW
   进程切换1⃣️切换时机：
                     进程(runnig) ----->主动进入等待状态:启动IO设备、创建一个子进程、等待中断
                                  ----->因被抢占cpu被动进入就绪状态:高优先级进程、cpu时间

          2⃣️切换过程:user mode---------->kernel mode
                                        ·保存被中断进程的context
                                        ·修改被中断进程的控制信息如状态等
                                        ·将被中断的进程加入相应的状态队列
                                        ·调度一个新的进程并恢复它的上下文信息

进程的控制块(PCB):1⃣️数据包，包含了许多与指定进程(a specific process)有关的信息；一个进程对应一个PCB
                2⃣️组成：   process state 进程状态
                          process number  pid
                          program counter PC值保存下一条执行指令的位置
                          registers 寄存器的值
                          memory limits 内存
                          list of open files 打开的文件
进程在物理内存中:
        多个进程在物理内存上面的分布是离散的：1⃣️目的
                                         2⃣️存在问题

进程队列：只需将context里的PCB塞进队列里面即可调度
